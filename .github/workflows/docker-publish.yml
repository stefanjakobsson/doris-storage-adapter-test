# This workflow builds and pushes a Docker image to GitHub Container Registry on push to main
# Docs: https://docs.github.com/en/packages/working-with-a-github-packages-registry/working-with-the-container-registry

name: Publish Docker image

on:
  push:
    branches:
      - main

jobs:
  build-and-push-latest:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Needed for MinVer to access tags

      # Using the minver CLI, compute the MinVer version and 
      # set MINVERVERSIONOVERRIDE which will be used by later steps.
      - name: Install MinVer CLI
        run: dotnet tool install -g minver-cli
      - name: Calculate version with MinVer
        run: |
          VER="$(minver) -t v" # -t v means tag prefix "v" should be used
          echo "MINVERVERSIONOVERRIDE=$VER" >> "$GITHUB_ENV"

      - name: Compose Docker tags
        id: tags
        shell: bash
        run: |
          IMAGE="ghcr.io/${ github.repository }"

          # Always add MinVer version and :current
          TAGS="$IMAGE:$MINVERVERSIONOVERRIDE\n$IMAGE:current"

          IS_RELEASE="false"
          if [[ "${MINVERVERSIONOVERRIDE}" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            IS_RELEASE="true"
          fi

          if [[ "$IS_RELEASE" == "true" ]]; then
            TAGS="$TAGS
            $IMAGE:latest"
            echo "Adding :latest (release build)"
          else
            echo "Not a release build; skipping :latest"
          fi

          # Expose as a multi-line output for build-push-action
          {
            echo "list<<EOF"
            echo "${TAGS}"
            echo "EOF"
          } >> "$GITHUB_OUTPUT"
      
      # Build and push Docker image
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          build-args: |
            MINVERVERSIONOVERRIDE=${{ env.MINVERVERSIONOVERRIDE }}
          tags: ${{ steps.tags.outputs.list }}
